name: Service Coverage

on:
  push:
    branches:
      - main

jobs:
  report-coverage:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build and test customer-service
        run: |
          cd customer-service
          mvn clean verify

      - name: Install PowerShell
        run: |
          sudo apt-get install -y wget
          wget https://github.com/PowerShell/PowerShell/releases/download/v7.2.9/powershell-7.2.9-linux-x64.tar.gz
          mkdir ~/powershell
          tar -xvf ./powershell-7.2.9-linux-x64.tar.gz -C ~/powershell
          echo "export PATH=\$PATH:~/powershell/pwsh" >> ~/.bashrc
          source ~/.bashrc

      - name: Extract customer-service test coverage using PowerShell inline script
        id: coverage
        run: |
          pwsh -Command "
          # Define the path to the jacoco.html file
          \$htmlFile = 'customer-service/target/site/jacoco/index.html'
          
          # Check if the HTML file exists
          if (-not (Test-Path \$htmlFile)) {
              Write-Host 'HTML file not found.'
              Write-Output 'coverage=0'  # Output coverage as 0 if file doesn't exist
              exit 0
          }
          
          # Read the HTML content from the file
          \$htmlContent = Get-Content \$htmlFile -Raw
          
          # Use a regular expression to extract the coverage percentage from the 'Total' row
          if (\$htmlContent -match '<td>\s*Total\s*<\/td>\s*<td class="bar">.*?<\/td>\s*<td class="ctr2">(\d+)%<\/td>') {
              \$coveragePercentage = \$matches[1]  # This will capture the percentage value
          } else {
              \$coveragePercentage = 0  # Default value if no match is found
          }
          
          # Output the coverage percentage in the required format
          Write-Output 'coverage=' + \$coveragePercentage"

      - name: Post coverage to GitHub Issue
        run: |
          curl -X POST \
            -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/3/comments \
            -d "{\"body\": \"Customer Service test coverage after latest push: **${{ steps.coverage.outputs.coverage }}%**\"}"
          
